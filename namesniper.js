const e=require("mineflayer"),r=require("mojang-api"),t=require("fs"),n=require("path");let o=null,s=null,a=null,i=!1,c=!1,l=null;function u(e=10){const r="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";let t="";for(let n=0;n<e;n++)t+=r.charAt(Math.floor(62*Math.random()));return t}function m(e){return new Promise(((t,n)=>{r.profile(e,((e,r)=>{!e&&r&&r.name?t(r.name):n(e||"No name returned")}))}))}function f(){const e="C:\\BlocksMC_TrackerData";t.existsSync(e)||t.mkdirSync(e,{recursive:!0});const r=n.join(e,"oguserstore.txt");return t.existsSync(r)||t.writeFileSync(r,"{}","utf8"),r}function g(){const e=f();try{const r=t.readFileSync(e,"utf8");return r?JSON.parse(r):{}}catch(e){return console.error("Error parsing oguserstore.txt:",e),{}}}function d(e,r,n,o){const s=f(),a=g();a[e]={Username:r,Password:n,status:o};try{t.writeFileSync(s,JSON.stringify(a,null,2))}catch(e){console.error("Error writing to oguserstore.txt:",e)}}function y(e){return g()[e]||null}function p(r,t,n){const l=y(r);let m,f;l&&l.Password?(m=l.Password,f=`/login ${m}`):(m=u(),l&&l.Username?d(r,l.Username,m,"Currently checking"):d(r,t,m,"Currently checking"),f=`/login ${m}`),s=e.createBot({host:"play.blocksmc.com",port:25565,username:t,version:"1.8.9",auth:"offline"}),s.once("spawn",(()=>{var e;s._client.write("chat",{message:f}),d(r,t,m,"Claimed account"),a=t,n({type:"claimed",message:`Claimed account for ${t}`}),o&&(clearInterval(o),o=null),e=s,function r(){e&&i&&(e.setControlState("forward",!0),setTimeout((()=>{e.setControlState("forward",!1),e.setControlState("back",!0),setTimeout((()=>{e.setControlState("back",!1),r()}),4e3)}),200))}()})),s.on("end",(()=>{i&&!c&&(n({type:"alert",message:"Bot disconnected. Attempting to reconnect..."}),setTimeout((()=>{p(r,t,n)}),5e3))})),s.on("error",(e=>{console.error("Bot error:",e),c||n({type:"error",message:"Failed to claim. Try again later."})}))}module.exports={startSniper:function(e,r){if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(e))return i=!1,l=null,void r({type:"error",message:"Invalid UUID. Please provide a valid UUID."});if(i)return void r({type:"info",message:"Bot is already tracking this UUID."});i=!0,c=!1,l=e;const t=y(e);if(t&&t.Username){if(a=t.Username,!t.Password){const r=u();d(e,a,r,"Currently checking")}r({type:"info",message:"Monitoring started. Currently checking account: "+a})}else m(e).then((t=>{a=t;const n=u();d(e,t,n,"Currently checking"),r({type:"info",message:"Monitoring started. Currently checking account: "+t})})).catch((e=>{r({type:"error",message:"Error retrieving username for UUID: "+e})}));o=setInterval((()=>{m(e).then((t=>{console.log("Pinged Mojang API: resolved username is: "+t);const n=y(e),s=n&&n.Username?n.Username:a;t!==s&&(r({type:"alert",message:`Detected username change from ${s} to ${t}. Attempting to claim immediately...`}),clearInterval(o),o=null,p(e,t,r))})).catch((e=>{console.error("Error checking username:",e)}))}),15e3)},stopSniper:function(e){if(c=!0,o&&(clearInterval(o),o=null,i=!1),s&&(s.quit(),s=null),l){const e=y(l);e&&d(l,e.Username,e.Password,"Stopped")}e({type:"info",message:"Name Claimer Bot stopped. STOP TRACKING"}),l=null},readUserOGStore:g};