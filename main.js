const{app:e,BrowserWindow:n,ipcMain:s,dialog:o}=require("electron"),r=require("path"),{autoUpdater:t}=require("electron-updater"),a=require("./selfkick");let d;a.emitter.on("log",(e=>{d&&d.webContents.send("selfkick-log",e)}));let i=!1;if(e.requestSingleInstanceLock()){function l(){d=new n({autoHideMenuBar:!0,width:1200,height:800,title:"BlocksMC Tracker",webPreferences:{contextIsolation:!0,preload:r.join(__dirname,"preload.js")}}),d.loadFile(r.join(__dirname,"public","index.html")),d.on("closed",(()=>{d=null}))}e.on("second-instance",(()=>{d&&(d.isMinimized()&&d.restore(),d.focus())})),e.whenReady().then((()=>{l(),t.autoDownload=!1,t.on("update-available",(e=>{console.log(`Update available: version ${e.version}`),o.showMessageBox({type:"info",title:"New update detected",message:`A new version (${e.version}) is available. Do you want to update now?`,buttons:["Update Now","Later"],defaultId:0,cancelId:1}).then((e=>{0===e.response?(console.log("User accepted update, starting download..."),t.downloadUpdate()):console.log("User postponed the update.")}))})),t.on("update-downloaded",(n=>{console.log("Update downloaded; quitting and installing update...");const s=require("fs"),{spawn:o}=require("child_process"),t="C:\\BlocksMC_TrackerData";s.existsSync(t)||s.mkdirSync(t,{recursive:!0});const a=r.basename(n.downloadedFile),d=r.join(t,a);s.copyFile(n.downloadedFile,d,(n=>{if(n)return void console.error("Error copying update file: ",n);console.log(`Copied update file to: ${d}`);o(d,[],{detached:!0,stdio:"ignore"}).unref(),e.quit()}))})),t.on("error",(e=>{console.error("Auto updater error:",e)})),t.checkForUpdates()})),s.on("checkBan",((e,n)=>{const{createBotInstance:s}=require("./bot");s(n,(n=>{"result"===n.type?e.sender.send("banResult",n.message):"log"===n.type&&e.sender.send("kickLog",n.message)}))})),s.on("startNamesniper",((e,n)=>{const{targetUuid:s}=n,{startSniper:o,readUserOGStore:r}=require("./namesniper");o(s,(n=>{"claimed"===n.type?(e.sender.send("namesniperClaimed",n.message),e.sender.send("ogUsernames",r())):"alert"===n.type?e.sender.send("namesniperAlert",n.message):"info"===n.type?e.sender.send("namesniperInfo",n.message):"error"===n.type&&e.sender.send("namesniperError",n.message)}))})),s.on("stopNamesniper",(e=>{const{stopSniper:n}=require("./namesniper");n((n=>{e.sender.send("namesniperStopped",n.message);const{readUserOGStore:s}=require("./namesniper");e.sender.send("ogUsernames",s())}))})),s.on("getOGUsernames",(e=>{const{readUserOGStore:n}=require("./namesniper");e.sender.send("ogUsernames",n())})),s.on("show-alert",((e,n)=>{o.showMessageBoxSync({message:n,buttons:["OK"]}),e.returnValue=!0})),s.on("show-confirm",((e,n)=>{const s=o.showMessageBoxSync({message:n,buttons:["Cancel","OK"],cancelId:0,defaultId:1});e.returnValue=1===s})),s.on("enable-selfkick",(e=>{i||(a.startSelfkick(),i=!0,e.sender.send("selfkick-status","started"))})),s.on("disable-selfkick",(e=>{i&&(a.stopSelfkick(),i=!1,e.sender.send("selfkick-status","stopped"))})),e.on("window-all-closed",(()=>{e.quit()})),e.on("quit",(()=>{process.exit(0)})),e.on("activate",(()=>{null===d&&l()}))}else e.quit();